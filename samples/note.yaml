swagger: "2.0"
info:
  version: 1.0.0
  title: NodeJS Boilerplate
  description: A sample API that demonstrates Swagger-Express-Middleware features
host: "localhost:8000"
basepath: "/"
consumes:
  - application/json
produces:
  - application/json

definitions:
  note:
    required:
      - name
    properties:
      _id:
        type: string
      name:
        type: string
      description:
        type: string
      account_id:
        type: integer
        minimum: 1
        example: 1
      status:
        type: integer
        enum: [0, 1, 2, 3]
        example: 2

  note200:
    type: object
    properties:
      data:
        type: object
        properties:
          note:
            type: object
            $ref: "#/definitions/note"

  notes200:
    type: object
    properties:
      data:
        type: object
        properties:
          notes:
            type: array
            items:
              $ref: "#/definitions/note"

parameters:
  noteName:
    name: noteName
    in: path
    description: Name of the note
    required: true
    type: string

paths:
  /notes:
    get:
      tags: ['Notes']
      description: This will return a list of notes.
      operationId: getNotes
      responses:
        200:
          description: Returns the matching notes
          schema:
            $ref: "#/definitions/notes200"

    delete:
      tags: ['Notes']
      description: Deletes all notes, optionally filtered by one or more criteria
      operationId: deletenotes
      responses:
        200:
          description: Returns the notes that were deleted
          schema:
            $ref: "#/definitions/notes200"

    post:
      tags: ['Notes']
      description: Creates a new note in the store
      operationId: addNote
      parameters:
        - name: note
          in: body
          description: The note to add to the store
          required: true
          schema:
            $ref: "#/definitions/note"
      responses:
        200:
          description: Returns the newly-added note
          schema:
            $ref: "#/definitions/note200"
          headers:
            Location:
              type: string
              description: The URL of the newly-added note

  /notes/{noteName}:
    parameters:
      - $ref: "#/parameters/noteName"

    get:
      tags: ['Notes']
      description: Returns a note by name
      operationId: findNoteByName
      responses:
        200:
          description: Returns the note data
          schema:
            $ref: "#/definitions/note200"
         
        400:
          description: The specified user ID is invalid (e.g. not a number).
        404:
          description: A user with the specified ID was not found.
        500:
          description: Internal server error
        201:
          description: 201
        default:
          description: Unexpected error


    delete:
      tags: ['Notes']
      description: Deletes a single note based on the name supplied
      operationId: deleteNote
      responses:
        200:
          description: Returns the note that was deleted
          schema:
            $ref: "#/definitions/note200"

    patch:
      tags: ['Notes']
      description: Updates a note by name
      parameters:
        - name: note
          in: body
          description: The updated note info
          required: true
          schema:
            $ref: "#/definitions/note"
      responses:
        200:
          description: Returns the updated note data
          schema:
            $ref: "#/definitions/note200"

  /:
    get:
      produces:
        - text/html
      responses:
        200:
          description: The Swagger note Store homepage :)
          schema:
            type: file
            default:
              $ref: "index.html"
